
#ifndef _H_FBFUNC
#define _H_FBFUNC

#if defined (c_plusplus) || defined (__cplusplus)
extern "C" {
#endif

/* admintool.c */ extern int getbnames (char *userid, char *bname, int *find);
/* admintool.c */ extern int m_info (void);
/* admintool.c */ extern int m_ordainBM (void);
/* admintool.c */ extern int m_retireBM (void);
/* admintool.c */ extern int getGroupSet (void);
/* admintool.c */ extern int chkGroupsInfo (void);
/* admintool.c */ extern int ChangeTheDir (struct boardheader *oldfh, int pos);
/* admintool.c */ extern int ChangeTheBoard (struct boardheader *oldfh, int pos);
/* admintool.c */ extern int m_newbrd (void);
/* admintool.c */ extern void ShowBrdSet (struct boardheader fh);
/* admintool.c */ extern int m_editbrd (void);
/* admintool.c */ extern int m_mclean (void);
/* admintool.c */ extern int m_register (void);
/* admintool.c */ extern int d_board (void);
/* admintool.c */ extern int d_user (char *cid);
/* admintool.c */ extern int x_level (void);
/* admintool.c */ extern int x_denylevel (void);
/* admintool.c */ extern void a_edits (void);
/* admintool.c */ extern int wall (void);
/* admintool.c */ extern void setsystempasswd (void);
/* admintool.c */ extern int x_csh (void);
/* admintool.c */ extern int add_to_QZ (char *userid, int num);
/* admintool.c */ extern int m_ordainQZ (void);
/* admintool.c */ extern int del_from_QZ (char *userid, int num);
/* admintool.c */ extern int m_retireQZ (void);
/* admintool.c */ extern int m_AddTrainingBM (void);
/* admintool.c */ extern int m_MinusTrainingBM (void);
/* admintool.c */ extern int m_OrdainBMQZ (void);
/* admintool.c */ extern int m_RetireBMQZ (void);
/* admintool.c */ extern void m_EditBoardLinks (void);
/* admintool.c */ extern void m_RefreshWeb (void);
/* admintool.c */ extern void m_EditConfig (void);
/* admintool.c */ extern void m_EditFiles (void);
/* announce.c */ extern void a_prompt (int bot, char *pmt, char *buf, int len);
/* announce.c */ extern int a_Save (char *path, char *key, struct fileheader *fileinfo, int nomsg, int full);
/* announce.c */ extern int a_Import (char *path, char *key, struct fileheader *fileinfo, char *direct, int nomsg);
/* announce.c */ extern int a_menusearch (char *path, char *key, char *found);
/* announce.c */ extern void a_menu (char *maintitle, char *path, int lastlevel, int lastbmonly, int depth);
/* announce.c */ extern int linkto (char *path, char *fname, char *title);
/* announce.c */ extern int add_grp (char *group, char *gname, char *bname, char *title);
/* announce.c */ extern int del_grp (char *grp, char *bname, char *title);
/* announce.c */ extern int edit_grp (char *bname, char *grp, char *title, char *newtitle);
/* announce.c */ extern void Announce (void);
/* announce.c */ extern int write_ann_trace (char *boardname, char *userid, int mode, char *title, char *location);
/* bbs.c */ extern char *setmodulefile(char *buf, char *boardname, char *filename);
/* bbs.c */ extern int check_stuffmode (void);
/* bbs.c */ extern int topfile_post (int ent, struct fileheader *fhdr, char *direct);
/* bbs.c */ extern int set_safe_record (void);
/* bbs.c */ extern char *sethomepath (char *buf, char *userid);
/* bbs.c */ extern void setqtitle (char *stitle);
/* bbs.c */ extern void setqreid (unsigned int reid);
/* bbs.c */ extern int WHICHDIST (char *userid);
/* bbs.c */ extern int chk_currDM (void);
/* bbs.c */ extern int chk_parentBM (void);
/* bbs.c */ extern int chk_currBM (char *BMstr);
/* bbs.c */ extern void setquotefile (char *filepath);
/* bbs.c */ extern char *sethomefile (char *buf, char *userid, char *filename);
/* bbs.c */ extern char *setuserfile (char *buf, char *filename);
/* bbs.c */ extern char *setbpath (char *buf, char *boardname);
/* bbs.c */ extern char *setbdir (char *buf, char *boardname);
/* bbs.c */ extern char *setbfile (char *buf, char *boardname, char *filename);
/* bbs.c */ extern void setmfile (char *buf, char *userid, char *filename);
/* bbs.c */ extern char *setmdir (char *buf, char *userid);
/* bbs.c */ extern int deny_me (char *bname);
/* bbs.c */ extern int seek_in_denyfile (char *filename, char *seekstr);
/* bbs.c */ extern void shownotepad (void);
/* bbs.c */ extern int uleveltochar (char *buf, unsigned int lvl);
/* bbs.c */ extern void printutitle (void);
/* bbs.c */ extern int g_board_names (struct shortfile *fhdrp);
/* bbs.c */ extern void make_blist (void);
/* bbs.c */ extern int Select (void);
/* bbs.c */ extern int junkboard (void);
/* bbs.c */ extern int Post (void);
/* bbs.c */ extern int Postfile (char *filename, char *nboard, char *posttitle, int mode);
/* bbs.c */ extern int get_a_boardname (char *bname, char *prompt);
/* bbs.c */ extern int do_cross (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern void readtitle (void);
/* bbs.c */ extern char *getstring_byaccess (char *result, int num, int a, int b, int c);
/* bbs.c */ extern int cmpfilename (void *fhdr);
/* bbs.c */ extern int cmpdigestfilename (char *digest_name, void *fhdr);
/* bbs.c */ extern int cpyfilename (struct fileheader *fhdr);
/* bbs.c */ extern int do_reply_push (struct fileheader *ptitle, int ent, char *direct);
/* bbs.c */ extern int read_pushpost (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int read_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int skip_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int do_select (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern void do_acction (int type);
/* bbs.c */ extern int acction_mode (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int dele_digest_top (char *dname, char *direc, char *flag);
/* bbs.c */ extern int move_digest_post(int ent, struct fileheader *fhdr, char *direct);
/* bbs.c */ extern int digest_post (int ent, struct fileheader *fhdr, char *direct);
/* bbs.c */ extern int do_reply (char *title, char *id, unsigned int reid);
/* bbs.c */ extern int garbage_line (char *str);
/* bbs.c */ extern int Origin2 (char *text);
/* bbs.c */ extern void do_quote (char *filepath, char quote_mode);
/* bbs.c */ extern void getcross (char *filepath, int mode);
/* bbs.c */ extern int do_post (void);
/* bbs.c */ extern int post_reply (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int post_cross (char islocal, int mode);
/* bbs.c */ extern void add_crossinfo (char *filepath, int mode);
/* bbs.c */ extern int show_board_notes (char *bname, int command);
/* bbs.c */ extern int show_user_notes (void);
/* bbs.c */ extern void outgo_post (struct fileheader *fh, char *board);
/* bbs.c */ extern int too_young (void);
/* bbs.c */ extern void keywordfilter (char *filepath, struct BCACHE *pCache);
/* bbs.c */ extern int post_article (char *postboard, char *mailid, unsigned int *p_reid, int is_module);
/* bbs.c */ extern int IsTheFileOwner (struct fileheader *fileinfo);
/* bbs.c */ extern int change_title (char *fname, char *title);
/* bbs.c */ extern int edit_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern void getnam (char *direct, int num, char *id);
/* bbs.c */ extern int edit_title (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int underline_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int show_file_info (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int mark_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int recommend_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int del_range (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int UndeleteArticle (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int loghandler_get_fd (void);
/* bbs.c */ extern int loghander_write (char *line, int len);
/* bbs.c */ extern int loghandler_writev (int linenum, ...);
/* bbs.c */ extern int mysql_escape_string (char *dst, char *src, int len);
/* bbs.c */ extern int del_log2db (char *user_id, char *filename, char *board_name);
/* bbs.c */ extern int del_pushsure (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int del_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int flag_clearto (int ent, char *direct, int clearall);
/* bbs.c */ extern int new_flag_clearto (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int new_flag_clear (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int full_Save_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int part_Save_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int Save_post (int ent, struct fileheader *fileinfo, char *direct, int full);
/* bbs.c */ extern int add_module (struct module_index *modulename, int count);
/* bbs.c */ extern int del_module (struct module_index *modulename, int count);
/* bbs.c */ extern int del_all_module (struct module_index *modulename, int count);
/* bbs.c */ extern int change_module (struct module_index *modulename, int count);
/* bbs.c */ extern int check_modulename (int num, struct module_index *module, char *buf);
/* bbs.c */ extern int Import_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int check_notespasswd (void);
/* bbs.c */ extern int show_b_secnote (void);
/* bbs.c */ extern int show_b_note (void);
/* bbs.c */ extern int into_announce (void);
/* bbs.c */ extern int forward_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int forward_u_post (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int Read (void);
/* bbs.c */ extern void notepad (void);
/* bbs.c */ extern int Q_Goodbye (void);
/* bbs.c */ extern int Goodbye (void);
/* bbs.c */ extern void do_report (char *filename, char *s);
/* bbs.c */ extern void report (char *s);
/* bbs.c */ extern void gamelog (char *s);
/* bbs.c */ extern void board_usage (char *mode, time_t usetime);
/* bbs.c */ extern int Info (void);
/* bbs.c */ extern int Conditions (void);
/* bbs.c */ extern int Welcome (void);
/* bbs.c */ extern int cmpbnames (char *bname, void *brec);
/* bbs.c */ extern void cancelpost (char *board, char *userid, struct fileheader *fh, int owned);
/* bbs.c */ extern int thesis_mode (void);
/* bbs.c */ extern int NotBackupBoard (void);
/* bbs.c */ extern void Add_Combine (char *board, struct fileheader *fileinfo, int has_yinyan);
/* bbs.c */ extern int return_del (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int return_range (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern int return_file_range (char *filename, int id1, int id2);
/* bbs.c */ extern int return_find (int ent, struct fileheader *fileinfo, char *direct);
/* bbs.c */ extern void rengedel_autoreport (char *title, char *str, char *userid, char *sysboard);
/* bbs.c */ extern int is_web_user (struct user_info *user);
/* bbs.c */ extern char *getfolderstr (char *filename);
/* bbs.c */ extern char *readdoent(int num, void *ent);
/* bbs.c */ extern int userenterboard(char* boardname);
/* bbs.c */ extern int userexitboard(char* boardname);
/* bbs.c */ extern int log_bm_ops(char *boardname, char *posname, char *operation, char *snippet);
/* bbs.c */ extern char *strnzhcpy(char *dest, const char *src, int n);
/* bbs.c */ extern int board_in_which_dist (char *boardname);
/* bbs.c */ extern char get_board_dist_char(char* boardname);
/* bbs.c */ extern int search_in_anonyindex(char* userid, char* ranstr, struct anony_item *item_p);
/* bbs.c */ extern char* get_anonyid(char* userid);
/* bbs.c */ extern int visit_wiki();
/* bbs.c */ int do_module();
/* bcache.c */ extern void attach_err (int shmkey, char *name, int err);
/* bcache.c */ extern int attach_shm (void);
/* bcache.c */ extern int fillbcache (void *fptr);
/* bcache.c */ extern void resolve_boards (void);
/* bcache.c */ extern int apply_boards (int (*func) (struct shortfile*));
/* bcache.c */ extern struct shortfile *getbcache (char *bname);
/* bcache.c */ extern int getbnum (char *bname);
/* bcache.c */ extern void setoboard (char *bname);
/* bcache.c */ extern int haspostperm (char *bname);
/* bcache.c */ extern int normal_board (char *bname);
/* bcache.c */ extern int fillucache (void *uentp);
/* bcache.c */ extern void resolve_ucache (void);
/* bcache.c */ extern void setuserid (int num, char *userid);
/* bcache.c */ extern int searchnewuser (void);
/* bcache.c */ extern void getuserid (char *userid, unsigned int uid);
/* bcache.c */ extern int searchuser (char *userid);
/* bcache.c */ extern int getuser (char *userid);
/* bcache.c */ extern char *u_namearray (char (*buf)[13], int *pnum, char *tag);
/* bcache.c */ extern void resolve_utmp (void);
/* bcache.c */ extern int getnewutmpent (struct user_info *up);
/* bcache.c */ extern int apply_ulist (int (*fptr) (struct user_info *));
/* bcache.c */ extern int apply_ulist_address (int (*fptr) (struct user_info *));
/* bcache.c */ extern int search_ulist (struct user_info *uentp, int (*fptr) (int, struct user_info*), int farg);
/* bcache.c */ extern int search_ulistn (struct user_info *uentp, int (*fptr) (int, struct user_info*), int farg, int unum);
/* bcache.c */ extern int t_search_ulist (struct user_info *uentp, int (*fptr) (int, struct user_info*), int farg, int show, int doTalk);
/* bcache.c */ extern void update_ulist (struct user_info *uentp, int uent);
/* bcache.c */ extern void update_utmp (void);
/* bcache.c */ extern int who_callme (struct user_info *uentp, int (*fptr) (int, struct user_info*), int farg, int me);
/* bm.c */ extern int addtodeny (char *uident, char *msg, int ischange, int info_type);
/* bm.c */ extern int deldeny (char *uident, int info_type);
/* bm.c */ extern int board_deny_user(int ent, struct fileheader *fileinfo, char *direct);
/* bm.c */ extern int control_user (void);
/* bm.c */ extern int deny_user (void);
/* bm.c */ extern int Rangefunc (int ent, struct fileheader *fileinfo, char *direct);
/* bm.c */ extern int edit_boardnote (void);
/* boards.c */ extern void EGroup (char *cmd);
/* boards.c */ extern void Boards (void);
/* boards.c */ extern void GoodBrds (void);
/* boards.c */ extern int removefile (char *file);
/* boards.c */ extern char *getstring_bynum (char *result, int num, int a, int b, int c);
/* boards.c */ extern int f_replace_file (struct boardcollection sstruct);
/* boards.c */ extern int getfilename (void);
/* boards.c */ extern int f_get_file (char *file, struct boardcollection *sstruct, int n);
/* boards.c */ extern int do_changedir (struct boardcollection dirr, char *olddir, char *newdir);
/* boards.c */ extern int getsubdirnum (char *file);
/* boards.c */ extern int getdirnumber (void);
/* boards.c */ extern int freshdirnum (int n);
/* boards.c */ extern int do_adddir (char *boardfile, char *newdir);
/* boards.c */ extern int init_dir (struct boardcollection *dirr, char *dirname, char *updir);
/* boards.c */ extern int boardisexist (struct boardcollection tmp, char *newboard);
/* boards.c */ extern int do_addboard (char *boardfile, char *newboard);
/* boards.c */ extern int struct_del_dir (struct boardcollection *dirr, char *deldir);
/* boards.c */ extern int struct_del_board (struct boardcollection *dirr, char *delboard);
/* boards.c */ extern int do_del_nocare (struct boardcollection dirr);
/* boards.c */ extern int do_deldir (struct boardcollection updir, char *deldir);
/* boards.c */ extern int do_delboard (struct boardcollection updir, char *delboard);
/* boards.c */ extern int getgood_dirnum (struct boardcollection currentdir);
/* boards.c */ extern int getgood_brdnum (struct boardcollection currentdir);
/* boards.c */ extern int get_pos (char *boardname);
/* boards.c */ extern void save_zapbuf (void);
/* boards.c */ extern int choose_board_good (char *filename, int newflag);
/* boards.c */ extern void New (void);
/* boards.c */ extern int load_goodboards(struct boardcollection currentstruct, struct newpostdata *nbrd,int dirnum,int brdnum);
/* boards.c */ extern int inGoodBrds (char *bname);
/* boards.c */ extern int inGoodBrds_d (char *bname);
/* boards.c */ extern int getposbyid (int id);
/* boards.c */ extern void load_zapbuf (void);
/* boards.c */ extern void load_GoodBrd (void);
/* boards.c */ extern void save_GoodBrd (void);
/* boards.c */ extern int load_boards (void);
/* boards.c */ extern int search_board (int *num);
/* boards.c */ extern void show_brdlist (int page, int clsflag, int newflag);
/* boards.c */ extern int read_dir (char *name, int newflag);
/* boards.c */ extern int check_newpost (struct newpostdata *ptr);
/* boards.c */ extern int showgood_brdlist (int page, int clsflag, int newflag, struct boardcollection currentstruct, int dirnum, int brdnum, struct newpostdata *nbrd);
/* boards.c */ extern int unread_position (char *dirfile, struct newpostdata *ptr);
/* boards.c */ extern int getname_byn(struct boardcollection tmpstruct,int n,struct newgood *ndir,int dirnum,int brdnum);
/* boards.c */ extern int choose_board (int newflag);
/* boards.c */ extern int brc_initial (char *boardname);
/* boards.c */ extern char *brc_getrecord (char *ptr, char *name, int *pnum, int *list);
/* boards.c */ extern char *brc_putrecord (char *ptr, char *name, int num, int *list);
/* boards.c */ extern int brc_putpushrecord (void);
/* boards.c */ extern int brc_getpushrecord (void);
/* boards.c */ extern void brc_update (void);
/* boards.c */ extern void brc_addlist (char *filename);
/* boards.c */ extern int brc_updatepush (struct fileheader *fileinfo);
/* boards.c */ extern int brc_pushunread (struct fileheader *fileinfo);
/* boards.c */ extern int brc_unread (char *filename);
/* boards.c */ extern int addtodenytalk (char *uident, char *msg, int ischange);
/* boards.c */ extern int deldenytalk (char *uident);
/* boards.c */ extern int x_CleanMainHck();
/* boards.c */ extern int CopyMainHck();
/* boards.c */ extern int PasteMainHck();
/* chat.c */ extern void chat_load_alias (void);
/* chat.c */ extern void transPERstr (char *str, char *tmpstr);
/* chat.c */ extern void printchatline (char *str);
/* chat.c */ extern void chat_clear (void);
/* chat.c */ extern void print_chatid (char *chatid);
/* chat.c */ extern int chat_send (int fd, char *buf);
/* chat.c */ extern int chat_recv (int fd, char *chatid);
/* chat.c */ extern void fixchatid (char *chatid);
/* chat.c */ extern int ent_chat (char *chatbuf);
/* chat.c */ extern int printuserent (struct user_info *uentp);
/* chat.c */ extern void chat_help (char *arg);
/* chat.c */ extern void zap_user (char *arg);
/* chat.c */ extern void query_user (char *arg);
/* chat.c */ extern void call_user (char *arg);
/* chat.c */ extern void chat_date (void);
/* chat.c */ extern void chat_users (void);
/* chat.c */ extern int print_friend_ent (struct user_info *uentp);
/* chat.c */ extern void chat_friends (void);
/* chat.c */ extern void set_rec (void);
/* chat.c */ extern void setpager (void);
/* chat.c */ extern void chat_sendmsg (char *arg);
/* chat.c */ extern void chat_showmail (void);
/* chat.c */ extern void define_alias (char *arg);
/* chat.c */ extern int use_alias (char *arg, int cfd);
/* chat.c */ extern int chat_cmd_match (char *buf, char *str);
/* chat.c */ extern int chat_cmd (char *buf, int cfd);
/* comm_lists.c */ extern void encodestr (register char *str);
/* comm_lists.c */ extern void decodestr (register char *str);
/* comm_lists.c */ extern void *sysconf_funcptr (char *func_name, int *type);
/* comm_lists.c */ extern void *sysconf_addstr (char *str);
/* comm_lists.c */ extern char *sysconf_str (char *key);
/* comm_lists.c */ extern int sysconf_eval (char *key);
/* comm_lists.c */ extern void sysconf_addkey (char *key, char *str, int val);
/* comm_lists.c */ extern void sysconf_addmenu (FILE *fp, char *key);
/* comm_lists.c */ extern void sysconf_addblock (FILE *fp, char *key);
/* comm_lists.c */ extern void parse_sysconf (char *fname);
/* comm_lists.c */ extern void build_sysconf (char *configfile, char *imgfile);
/* comm_lists.c */ extern void load_sysconf_image (char *imgfile);
/* comm_lists.c */ extern void load_sysconf (void);
/* comm_lists.c */ extern int domenu (char *menu_name);
/* comm_lists.c */ extern int x_denypostqz (void);
/* comm_lists.c */ extern int x_denytalkta (void);
/* delete.c */ extern void offline (void);
/* delete.c */ extern void getuinfo (FILE *fn);
/* delete.c */ extern void mail_info (char *lastword);
/* edit.c */ extern void msgline (void);
/* edit.c */ extern void msg (int num);
/* edit.c */ extern void indigestion (int i);
/* edit.c */ extern void countline (void);
/* edit.c */ extern int getlineno (void);
/* edit.c */ extern char *killsp (char *s);
/* edit.c */ extern void goline (int n);
/* edit.c */ extern void set (void);
/* edit.c */ extern void go (void);
/* edit.c */ extern void searchline (char *text);
/* edit.c */ extern void search (void);
/* edit.c */ extern void insert_char (int ch);
/* edit.c */ extern void ve_insert_str (char *str);
/* edit.c */ extern void delete_char (void);
/* edit.c */ extern void vedit_init (void);
/* edit.c */ extern void insert_to_fp (FILE *fp);
/* edit.c */ extern void insert_from_fp (FILE *fp);
/* edit.c */ extern int read_file (char *filename);
/* edit.c */ extern void write_posts (void);
/* edit.c */ extern void write_header (FILE *fp, int mode, int iscross);
/* edit.c */ extern void addsignature (FILE *fp, int blank);
/* edit.c */ extern char *format_pushbuf (char *pushbuf, char *bufformatted);
/* edit.c */ extern int valid_article (char *pmt, char *abort, int sure);
/* edit.c */ extern void filter_html (char *from, char *to);
/* edit.c */ extern int log2db (char *user_id, char *ip_address, char *filename, char *board_name, unsigned int reid, char *content, int blog_tag);
/* edit.c */ extern int write_file (char *filename, int write_header_to_file, int addfrom, int sure, unsigned int reid);
/* edit.c */ extern void keep_fail_post (void);
/* edit.c */ extern void strnput (char *str);
/* edit.c */ extern void cstrnput (char *str);
/* edit.c */ extern void display_buffer (void);
/* edit.c */ extern int vedit_process_ESC (int arg);
/* edit.c */ extern int mark_block (void);
/* edit.c */ extern void process_MARK_action (int arg, char *msg);
/* edit.c */ extern int process_ESC_action (int action, int arg);
/* edit.c */ extern void vedit_key (int ch);
/* edit.c */ extern int raw_vedit (char *filename, int write_header_to_file, int modifyheader, unsigned int reid);
/* edit.c */ extern int vedit (char *filename, int write_header_to_file, int modifyheader);
/* edit.c */ extern int vedit_reid (char *filename, int write_header_to_file, int modifyheader, unsigned int reid);
/* fileshm.c */ extern int fill_shmfile (int mode, char *fname, char *shmkey);
/* fileshm.c */ extern void show_goodbyeshm (void);
/* fileshm.c */ extern void show_welcomeshm (void);
/* fileshm.c */ extern void show_issue (void);
/* friendtest.c */ extern void sethome (char *s, char *id);
/* friendtest.c */ extern void sethometop (char *s, char *id);
/* friendtest.c */ extern void sethomestat (char *s, char *id);
/* friendtest.c */ extern void setfcolor (int i, int j);
/* friendtest.c */ extern void setbcolor (int i);
/* friendtest.c */ extern void resetcolor (void);
/* friendtest.c */ extern void load_users (char *filename);
/* friendtest.c */ extern void save_users (char *filename);
/* friendtest.c */ extern void load_quests (char *filename);
/* friendtest.c */ extern void save_quests (char *filename);
/* friendtest.c */ extern void check_stats (char *filename);
/* friendtest.c */ extern void save_stats (char *filename, char *a);
/* friendtest.c */ extern void load_stats (char *filename);
/* friendtest.c */ extern void sort_users (void);
/* friendtest.c */ extern void init (void);
/* friendtest.c */ extern void done (void);
/* friendtest.c */ extern int usermenu (void);
/* friendtest.c */ extern int possible_high (void);
/* friendtest.c */ extern void new_friendtest_reset (void);
/* friendtest.c */ extern void new_friendtest (void);
/* friendtest.c */ extern void do_test_reset (void);
/* friendtest.c */ extern void do_test (void);
/* friendtest.c */ extern void show_stat_reset (void);
/* friendtest.c */ extern void show_stat (void);
/* friendtest.c */ extern void admin_reset (void);
/* friendtest.c */ extern void admin_stat (void);
/* friendtest.c */ extern void sys_reset (void);
/* friendtest.c */ extern void sys_list (void);
/* friendtest.c */ extern int admin_menu (void);
/* friendtest.c */ extern int friend_main (void);
/* goodbye.c */ extern int countlogouts (char *filename);
/* goodbye.c */ extern void user_display (char *filename, int number, int mode);
/* goodbye.c */ extern char *cnumposts (int num);
/* goodbye.c */ extern void countdays (int *year, int *month, int *day, time_t now);
/* goodbye.c */ extern void showstuff (char *buf);
/* help.c */ extern void show_help (char *fname);
/* help.c */ extern int mainreadhelp (void);
/* help.c */ extern int mailreadhelp (void);
/* io.c */ extern void switch_code (void);
/* io.c */ extern int write2 (int port, char *str, int len);
/* io.c */ extern int read2 (int port, char *str, int len);
/* io.c */ extern void hit_alarm_clock (int num);
/* io.c */ extern void init_alarm (void);
/* io.c */ extern void oflush (void);
/* io.c */ extern void output (char *s, int len);
/* io.c */ extern int ochar (int c);
/* io.c */ extern void add_io (int fd, int timeout);
/* io.c */ extern void add_flush (int (*flushfunc) (void));
/* io.c */ extern int num_in_buf (void);
/* io.c */ extern int igetch (void);
/* io.c */ extern int igetkey (void);
/* io.c */ extern void top_show (char *prompt);
/* io.c */ extern int ask (char *prompt);
/* io.c */ extern int getdata (int line, int col, char *prompt, char *buf, int len, int echo, int clearlabel);
/* io.c */ extern int multi_getdata (int line, int col, int maxcol, char *prompt, char *buf, int len, int maxline, int clearlabel);
/* io.c */ extern void auto_insert (char *buffer, int each_length, char char_insert, int maxline);
/* list.c */ extern int myfriend (int uid);
/* list.c */ extern int hisfriend (struct user_info *uentp);
/* list.c */ extern int isreject (struct user_info *uentp);
/* list.c */ extern int print_title (void);
/* list.c */ extern int print_title2 (void);
/* list.c */ extern void update_data (int num);
/* list.c */ extern int print_user_info_title (void);
/* list.c */ extern void show_message (char *msg);
/* list.c */ extern void swap_user_record (int a, int b);
/* list.c */ extern int compare_user_record (struct user_info *left, struct user_info *right);
/* list.c */ extern void sort_user_record (int left, int right);
/* list.c */ extern int fill_userlist (void);
/* list.c */ extern int do_userlist (void);
/* list.c */ extern int show_userlist (void);
/* list.c */ extern int deal_key (int ch, int allnum, int pagenum);
/* list.c */ extern int deal_key2 (int ch, int allnum, int pagenum);
/* list.c */ extern int countusers (void *uentp);
/* list.c */ extern int printuent (void *uentp);
/* list.c */ extern int allusers (void);
/* list.c */ extern int mailto (void *uentp);
/* list.c */ extern void  mailtoall (int mode);
/* list.c */ extern int Show_Users (void);
/* list.c */ extern void setlistrange (int i);
/* list.c */ extern int do_query (int star, int curr);
/* list.c */ extern int do_query2 (int star, int curr);
/* list.c */ extern void Users (void);
/* list.c */ extern int t_friends (void);
/* list.c */ extern int t_users (void);
/* list.c */ extern int t_watchinboard (void);
/* list.c */ extern int choose (int update, int defaultn, int (*title_show) (void), int (*key_deal) (int,int,int), int (*list_show) (void), int (*read) (int,int) );
/* mail.c */ extern int bbs_sendmail (char *fname, char *title, char *receiver, int filter, int mime);
/* mail.c */ extern int getbmns (char *userid);
/* mail.c */ extern int chkmail (void);
/* mail.c */ extern int check_query_mail (char *qry_mail_dir);
/* mail.c */ extern int mailall (void);
/* mail.c */ extern void m_internet (void);
/* mail.c */ extern void m_init (void);
/* mail.c */ extern int do_send (char *userid, char *title);
/* mail.c */ extern int autoreplymail_file (char *userid, char *title);
/* mail.c */ extern int m_send (char *userid);
/* mail.c */ extern int read_mail (struct fileheader *fptr);
/* mail.c */ extern int read_new_mail (void *fptr);
/* mail.c */ extern int m_new (void);
/* mail.c */ extern void mailtitle (void);
/* mail.c */ extern int getmailboxsize (char *userid, unsigned int userlevel);
/* mail.c */ extern int getmailsize (char *userid);
/* mail.c */ extern char *maildoent (int num, void *ent);
/* mail.c */ extern int mail_read (int ent, struct fileheader *fileinfo, char *direct);
/* mail.c */ extern int mail_reply (int ent, struct fileheader *fileinfo, char *direct);
/* mail.c */ extern int mail_del (int ent, struct fileheader *fileinfo, char *direct);
/* mail.c */ extern int mail_forward (int ent, struct fileheader *fileinfo, char *direct);
/* mail.c */ extern int mail_u_forward (int ent, struct fileheader *fileinfo, char *direct);
/* mail.c */ extern int mail_del_range (int ent, struct fileheader *fileinfo, char *direct);
/* mail.c */ extern int mail_mark (int ent, struct fileheader *fileinfo, char *direct);
/* mail.c */ extern int m_read (void);
/* mail.c */ extern int invalidaddr (char *addr);
/* mail.c */ extern int g_send (void);
/* mail.c */ extern int AllowGroupMail (char *userid, char *myid);
/* mail.c */ extern int do_gsend (char **userid, char *title, int num);
/* mail.c */ extern int mail_file (char *tmpfile, char *userid, char *title);
/* mail.c */ extern int ov_send (void);
/* mail.c */ extern int in_group (char (*uident)[80], int cnt);
/* mail.c */ extern int doforward (char *direct, struct shortfile *fh, int mode);
/* main.c */ extern void log_usies (char *mode, char *mesg);
/* main.c */ extern void u_enter (void);
/* main.c */ extern void setflags (int mask, int value);
/* main.c */ extern int kick_web_user (struct user_info *user);
/* main.c */ extern void u_exit (void);
/* main.c */ extern int cmpuids (char *uid, void *up);
/* main.c */ extern int dosearchuser (char *userid);
/* main.c */ extern void talk_request (int num);
/* main.c */ extern void abort_bbs (void);
/* main.c */ extern int cmpuids2 (int unum, struct user_info *urec);
/* main.c */ extern int count_multi (struct user_info *uentp);
/* main.c */ extern int count_user (void);
/* main.c */ extern void multi_user_check (void);
/* main.c */ extern void system_init (void);
/* main.c */ extern void system_abort (void);
/* main.c */ extern void logattempt (char *uid, char *frm);
/* main.c */ extern void check_tty_lines (void);
/* main.c */ extern void visitlog (void);
/* main.c */ extern void login_query (void);
/* main.c */ extern int check_email_id (const char *id);
/* main.c */ extern int is_strcase_with_prefix (const char *prefix, int len, const char *str);
/* main.c */ extern int is_strcase_with_suffix (const char *suffix, int len, const char *str);
/* main.c */ extern int check_email_domain (const char *domain);
/* main.c */ extern int check_real_name_email (const char *email);
/* main.c */ extern void get_real_name_email (char *buf);
/* main.c */ extern int write_real_name_email (const char *email);
/* main.c */ extern int get_random (unsigned int *buf, int size);
/* main.c */ extern int mailto_real_name_mail (char *userid);
/* main.c */ extern void ask_real_mail (void);
/* main.c */ extern int valid_ident (char *ident);
/* main.c */ extern void write_defnotepad (void);
/* main.c */ extern void notepad_init (void);
/* main.c */ extern void user_login (void);
/* main.c */ extern void set_numofsig (void);
/* main.c */ extern int check_maxmail (void);
/* main.c */ extern void start_client (void);
/* main.c */ extern int egetch (void);
/* main.c */ extern char *boardmargin (void);
/* main.c */ extern void update_endline (void);
/* main.c */ extern void showtitle (char *title, char *mid);
/* main.c */ extern void firsttitle (char *title);
/* main.c */ extern void docmdtitle (char *title, char *prompt);
/* main.c */ extern void c_recover (void);
/* main.c */ extern void tlog_recover (void);
/* maintain.c */ extern int check_systempasswd (void);
/* maintain.c */ extern void autoreport (char *title, char *str, char *userid, char *sysboard);
/* maintain.c */ extern int securityreport (char *str);
/* maintain.c */ extern int get_grp (char *seekstr);
/* maintain.c */ extern void stand_title (char *title);
/* maintain.c */ extern int valid_brdname (char *brd);
/* maintain.c */ extern int domailclean (void *fhdrp);
/* maintain.c */ extern int cleanmail (void *urec);
/* maintain.c */ extern void trace_state (int flag, char *name, int size);
/* maintain.c */ extern void id_record (char *userid, int TYPE);
/* maintain.c */ extern int scan_new_register_form (char *regfile, char *searchid);
/* maintain.c */ extern int kick_user (struct user_info *userinfo);
/* maintitle.c */ extern char *chgrp (void);
/* modetype.c */ extern char *ModeType (int mode);
/* more.c */ extern void ActiveBoard_Init (void);
/* more.c */ extern void empty_movie (int x);
/* more.c */ extern void setcalltime (void);
/* more.c */ extern int readln (int fd, char *buf, int linenum, int buildlinks);
/* more.c */ extern int seek_nth_line (int fd, int no);
/* more.c */ extern int countln (char *fname);
/* more.c */ extern void netty_more (void);
/* more.c */ extern int printacbar (void);
/* more.c */ extern int check_calltime (void);
/* more.c */ extern void R_monitor (void);
/* more.c */ extern int mesgmore (char *filename, int promptend);
/* more.c */ extern int ansimore (char *filename, int promptend);
/* more.c */ extern int ansimore_partial (char *filename, int promptend, int row, int numlines);
/* more.c */ extern int ansimore_withmode (char *filename, int promptend, int mode);
/* namecomplete.c */ extern void FreeNameList (void);
/* namecomplete.c */ extern void CreateNameList (void);
/* namecomplete.c */ extern int SeekInNameList (char *name);
/* namecomplete.c */ extern int DelFromNameList (char *name);
/* namecomplete.c */ extern int AddToNameList (char *name);
/* namecomplete.c */ extern void ApplyToNameList (int (*fptr) (char *));
/* namecomplete.c */ extern int chkstr (char *otag, char *tag, char *name);
/* namecomplete.c */ extern int namecomplete (char *prompt, char *data);
/* namecomplete.c */ extern int namecomplete_zh (char *prompt, char *data);
/* namecomplete.c */ extern int UserMaxLen (char (*cwlist)[13], int cwnum, int morenum, int count);
/* namecomplete.c */ extern int UserSubArray (char (*cwbuf)[13], char (*cwlist)[13], int cwnum, int key, int pos);
/* namecomplete.c */ extern int usercomplete (char *prompt, char *data);
/* pass.c */ extern void to64 (char *s, long int v, int n);
/* pass.c */ extern char *genpasswd (char *pw);
/* pass.c */ extern int checkpasswd (char *passwd, char *test);
/* pass.c */ extern int checkpasswd0 (char *passwd, char *test);
/* postheader.c */ extern void check_title (char *title);
/* postheader.c */ extern int readmodulename (struct module_index *module);
/* postheader.c */ extern int showmodulename (struct module_index *module);
/* postheader.c */ extern int ismoduleexist (void);
/* postheader.c */ extern int post_header (struct postheader *header,int is_module);

/* readabc.c */ extern int marked_all (int type);
/* readabc.c */ extern int return_search_all (int type);
/* readabc.c */ extern int marked_mail ();
/* read.c */ extern struct keeploc *getkeep (char *s, int def_topline, int def_cursline);
/* read.c */ extern void fixkeep (char *s, int first, int last);
/* read.c */ extern void modify_locmem (struct keeploc *locmem, int total);
/* read.c */ extern int move_cursor_line (struct keeploc *locmem, int mode);
/* read.c */ extern void draw_title (void (*dotitle) (void));
/* read.c */ extern void draw_entry (char *(*doentry) (int,void*), struct keeploc *locmem, int num, int ssize);
/* read.c */ extern void i_read (int cmdmode, char *direct, void (*dotitle) (void), char *(*doentry) (int,void*), struct one_key *rcmdlist, int ssize);
/* read.c */ extern int i_read_key (struct one_key *rcmdlist, struct keeploc *locmem, int ch, int ssize);
/* read.c */ extern int auth_search_down (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int auth_search_up (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int post_search_down (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int post_search_up (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int show_author (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int SR_BMfunc (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int SR_first_new (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int SR_last (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int SR_first (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int SR_read (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int SR_author (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int search_author (struct keeploc *locmem, int offset, char *powner);
/* read.c */ extern int auth_post_down (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int auth_post_up (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int t_search_down (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int t_search_up (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int thread_up (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int thread_down (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern int search_post (struct keeploc *locmem, int offset);
/* read.c */ extern int search_title (struct keeploc *locmem, int offset);
/* read.c */ extern int search_thread (struct keeploc *locmem, int offset, char *title, unsigned int reid);
/* read.c */ extern int sread (int readfirst, int auser, struct fileheader *ptitle);
/* read.c */ extern int searchpattern (char *filename, char *query);
/* read.c */ extern int search_articles (struct keeploc *locmem, char *query, unsigned int reid, int offset, int aflag, int newflag);
/* read.c */ extern int locate_the_post (struct fileheader *fileinfo, char *query, int offset, int aflag, int newflag);
/* read.c */ extern int cursor_pos (struct keeploc *locmem, int val, int from_top);
/* read.c */ extern int r_searchall (void);
/* read.c */ extern int r_searchalldel (void);
/* read.c */ extern int searchallboard (char *id, char *patten, int dt, int all, int del);
/* read.c */ extern int Mail_combine (int ent, struct fileheader *fileinfo, char *direct);
/* read.c */ extern void clear_del (void);
/* read.c */ extern int r_deleteall (void);
/* read.c */ extern int deleteallboard (char *id);
/* record.c */ extern int safewrite (int fd, void *buf, int size);
/* record.c */ extern long int get_num_records (char *filename, int size);
/* record.c */ extern int get_topfile_num (char *filename, int size);
/* record.c */ extern int get_dir_num (char *filename, int size);
/* record.c */ extern int get_return_dir_num (char *filename, int size);
/* record.c */ extern int append_record (char *filename, void *record, int size);
/* record.c */ extern int append_ip (char *filename, char *ip);
/* record.c */ extern int append_mail (char *filename, char *mail);
/* record.c */ extern void toobigmesg (void);
/* record.c */ extern int apply_record (char *filename, int (*fptr) (void*), int size);
/* record.c */ extern int search_ip (char *filename, char *userip);
/* record.c */ extern int search_mail (char *filename, char *mail);
/* record.c */ extern int search_record (char *filename, void *rptr, int size, int (*fptr) (char *, void*), char *farg);
/* record.c */ extern int get_record (char *filename, void *rptr, int size, int id);
/* record.c */ extern int get_records (char *filename, void *rptr, int size, int id, int number);
/* record.c */ extern int substitute_record (char *filename, void *rptr, int size, int id);
/* record.c */ extern void tmpfilename (char *filename, char *tmpfile, char *deleted);
/* record.c */ extern int delete_record (char *filename, int size, int id);
/* record.c */ extern int delete_range (char *filename, int id1, int id2, int *prealdel);
/* record.c */ extern int update_file (char *dirname, int size, int ent, int (*filecheck) (void*), void (*fileupdate) (char*));
/* record.c */ extern int delete_file (char *dirname, int size, int ent, int (*filecheck) (void*));
/* record.c */ extern int move_file(char *dirname, int size, int src, int dst, int (*filecheck) (void *));
/* register.c */ extern int danger_user_id (char *userid);
/* register.c */ extern int bad_user_id (char *userid);
/* register.c */ extern int compute_user_value (struct userec *urec);
/* register.c */ extern int getnewuserid (void);
/* register.c */ extern int id_with_num (char *userid);
/* register.c */ extern void generatenumber (char (*inout)[40], int number);
/* register.c */ extern void new_register (void);
/* register.c */ extern int invalid_email (char *addr);
/* register.c */ extern int check_register_ok (void);
/* register.c */ extern void check_register_info (void);
/* screen.c */ extern void clrnlines (int n);
/* screen.c */ extern int seekthestr (char *str, int num);
/* screen.c */ extern int num_ans_chr (char *str);
/* screen.c */ extern void init_screen (int slns, int scols);
/* screen.c */ extern void initscr (void);
/* screen.c */ extern void rel_move (int was_col, int was_ln, int new_col, int new_ln);
/* screen.c */ extern void standoutput (char *buf, int ds, int de, int sso, int eso);
/* screen.c */ extern void redoscr (void);
/* screen.c */ extern void refresh (void);
/* screen.c */ extern void move (int y, int x);
/* screen.c */ extern void getyx (int *y, int *x);
/* screen.c */ extern void clear (void);
/* screen.c */ extern void clear_whole_line (int i);
/* screen.c */ extern void clrtoeol (void);
/* screen.c */ extern void clrtobot (void);
/* screen.c */ extern void clrstandout (void);
/* screen.c */ extern void outc (register unsigned char c);
/* screen.c */ extern void outs (register char *str);
/* screen.c */ extern void outns (register char *str, register int n, register int cc);
/* screen.c */ extern void prints (const char *fmt, ...);
/* screen.c */ extern void mutilineprints(char *src, int linenum, int *line);
/* screen.c */ extern void addch (int ch);
/* screen.c */ extern void scroll (void);
/* screen.c */ extern void rscroll (void);
/* screen.c */ extern void standout (void);
/* screen.c */ extern void standend (void);
/* screen.c */ extern void saveline (int line, int mode);
/* screen.c */ extern void saveline2 (int line, int mode, char *buffer);
/* sendmsg.c */ extern int get_msg (char *uid, char *msg, int line);
/* sendmsg.c */ extern char msgchar (struct user_info *uin);
/* sendmsg.c */ extern int canmsg (struct user_info *uin);
/* sendmsg.c */ extern int s_msg (void);
/* sendmsg.c */ extern int show_allmsgs (void);
/* sendmsg.c */ extern int send_web_msg (char *touserid);
/* sendmsg.c */ extern int do_sendmsg (struct user_info *uentp, char *msgstr, int mode, int userpid);
/* sendmsg.c */ extern int dowall (struct user_info *uin);
/* sendmsg.c */ extern int myfriend_wall (struct user_info *uin);
/* sendmsg.c */ extern int hisfriend_wall (struct user_info *uin);
/* sendmsg.c */ extern int friend_wall (void);
/* sendmsg.c */ extern void r_msg2 (void);
/* sendmsg.c */ extern void count_msg (int num);
/* sendmsg.c */ extern void r_msg (int num);
/* sendmsg.c */ extern int friend_login_wall (struct user_info *pageinfo);
/* sendmsg.c */ extern int append_msg (char *path, char *uid, char *msg);
/* sendmsg.c */ extern int count_msgline (char *msg);
/* stuff.c */ extern int presskeyfor (char *msg, int x);
/* stuff.c */ extern int pressanykey (void);
/* stuff.c */ extern int pressreturn (void);
/* stuff.c */ extern int msgmorebar (char *filename);
/* stuff.c */ extern int askyn (char *str, int defa, int gobottom);
/* stuff.c */ extern void printdash (char *mesg);
/* stuff.c */ extern void bell (void);
/* stuff.c */ extern void touchnew (void);
/* stuff.c */ extern int deltree (char *dst);
/* stuff.c */ extern int bbssetenv (char *env, char *val);
/* stuff.c */ extern int do_exec (char *com, char *wd);
/* stuff.c */ extern char *horoscope (char month, char day);
/* talk.c */ extern int ishidden (char *user);
/* talk.c */ extern char pagerchar (int friend, int pager);
/* talk.c */ extern int canpage (int friend, int pager);
/* talk.c */ extern char *idle_str (struct user_info *uent);
/* talk.c */ extern int listcuent (struct user_info *uentp);
/* talk.c */ extern void creat_list (void);
/* talk.c */ extern int t_pager (void);
/* talk.c */ extern int show_user_plan (char *userid);
/* talk.c */ extern int show_one_file (char *filename);
/* talk.c */ extern void show_dm (char *userid);
/* talk.c */ extern void show_bm (char firstchar, char *userid);
/* talk.c */ extern void show_rmail (char firstchar, char *userid);
/* talk.c */ extern struct user_info *t_search (char *sid, int pid);
/* talk.c */ extern int t_query (char *q_id);
/* talk.c */ extern int count_active (struct user_info *uentp);
/* talk.c */ extern int count_useshell (struct user_info *uentp);
/* talk.c */ extern int count_user_logins (struct user_info *uentp);
/* talk.c */ extern int count_visible_active (struct user_info *uentp);
/* talk.c */ extern int alcounter (struct user_info *uentp);
/* talk.c */ extern int num_alcounter (void);
/* talk.c */ extern int num_useshell (void);
/* talk.c */ extern int num_active_users (void);
/* talk.c */ extern int num_user_logins (char *uid);
/* talk.c */ extern int num_visible_users (void);
/* talk.c */ extern int cmpfnames (char *userid, void *uv);
/* talk.c */ extern int t_cmpuids (int uid, struct user_info *up);
/* talk.c */ extern int t_talk (void);
/* talk.c */ extern int ttt_talk (struct user_info *userinfo);
/* talk.c */ extern int cmpunums (int unum, struct user_info *up);
/* talk.c */ extern int cmpmsgnum (int unum, struct user_info *up);
/* talk.c */ extern int setpagerequest (int mode);
/* talk.c */ extern int servicepage (int line, char *mesg);
/* talk.c */ extern int talkreply (void);
/* talk.c */ extern int talkflush (void);
/* talk.c */ extern void endmsg (int num);
/* talk.c */ extern int do_talk (int fd);
/* talk.c */ extern int shortulist (void);
/* talk.c */ extern int do_list (char *modestr);
/* talk.c */ extern int t_list (void);
/* talk.c */ extern void sig_catcher (int num);
/* talk.c */ extern int t_monitor (void);
/* talk.c */ extern int seek_in_file (char *filename, char *seekstr);
/* talk.c */ extern int listfilecontent (char *fname, int y);
/* talk.c */ extern int listfilecontent2 (char *fname, int y, int startline);
/* talk.c */ extern int add_to_file (char *filename, char *str);
/* talk.c */ extern int addtooverride (char *uident);
/* talk.c */ extern int del_from_file (char *filename, char *str);
/* talk.c */ extern int deleteoverride (char *uident, char *filename);
/* talk.c */ extern void override_title (void);
/* talk.c */ extern char *override_doentry (int ent, void *fh);
/* talk.c */ extern int override_edit (int ent, struct override *fh, char *direc);
/* talk.c */ extern int override_add (int ent, struct override *fh, char *direct);
/* talk.c */ extern int override_dele (int ent, struct override *fh, char *direct);
/* talk.c */ extern int friend_edit (int ent, struct override *fh, char *direct);
/* talk.c */ extern int friend_add (int ent, struct override *fh, char *direct);
/* talk.c */ extern int friend_dele (int ent, struct override *fh, char *direct);
/* talk.c */ extern int friend_mail (int ent, struct override *fh, char *direct);
/* talk.c */ extern int friend_query (int ent, struct override *fh, char *direct);
/* talk.c */ extern int friend_help (void);
/* talk.c */ extern int reject_edit (int ent, struct override *fh, char *direct);
/* talk.c */ extern int reject_add (int ent, struct override *fh, char *direct);
/* talk.c */ extern int reject_dele (int ent, struct override *fh, char *direct);
/* talk.c */ extern int reject_query (int ent, struct override *fh, char *direct);
/* talk.c */ extern int reject_help (void);
/* talk.c */ extern void t_friend (void);
/* talk.c */ extern void t_reject (void);
/* talk.c */ extern int cmpfuid (const void *a, const void *b);
/* talk.c */ extern int getfriendstr (void);
/* talk.c */ extern int getrejectstr (void);
/* talk.c */ extern void do_log (char *msg, int who);
/* talk.c */ extern int deal_key3 (char ch, int allnum, int pagenum);
/* talk.c */ extern void do_query3 (int star, int curr);
/* talk.c */ extern int IsGoodBm (char *id);
/* term.c */ extern int get_tty (void);
/* term.c */ extern void init_tty (void);
/* term.c */ extern void reset_tty (void);
/* term.c */ extern void restore_tty (void);
/* term.c */ extern int term_init (char *term);
/* term.c */ extern void do_move (int destcol, int destline, int (*outc) (int));
/* userinfo.c */ extern void disply_userinfo (struct userec *u);
/* userinfo.c */ extern void uinfo_change1 (int i, struct userec *u, struct userec *newinfo);
/* userinfo.c */ extern void check_uinfo (struct userec *u, int MUST);
/* userinfo.c */ extern int uinfo_query (struct userec *u, int real, int unum);
/* userinfo.c */ extern void x_info (void);
/* userinfo.c */ extern void getfield (int line, char *info, char *desc, char *buf, int len);
/* userinfo.c */ extern int id_in_form (char *id);
/* userinfo.c */ extern void x_fillform (void);
/* userstat.c */ extern long unsigned int ipintonum (char *ip);
/* userstat.c */ extern int checkip (char *ipaddr);
/* userstat.c */ extern int insjtunetwork (char *ip);
/* userstat.c */ extern void cleanstats (struct userstat *userstatsp);
/* userstat.c */ extern struct userstat userstatist (void);
/* userstat.c */ extern int showStatist (void);
/* vote.c */ extern int setvoteflag (char *bname, int flag);
/* vote.c */ extern void b_report (char *str);
/* vote.c */ extern void makevdir (char *bname);
/* vote.c */ extern void setvfile (char *buf, char *bname, char *filename);
/* vote.c */ extern void setcontrolfile (void);
/* vote.c */ extern int b_notes_edit (void);
/* vote.c */ extern int b_notes_passwd (void);
/* vote.c */ extern int b_suckinfile (FILE *fp, char *fname);
/* vote.c */ extern int catnotepad (FILE *fp, char *fname);
/* vote.c */ extern int b_closepolls (void);
/* vote.c */ extern void get_result_title (void);
/* vote.c */ extern int HiddenBoard (char *name);
/* vote.c */ extern int mk_result (int num);
/* vote.c */ extern int vote_maintain (char *bname);
/* vote.c */ extern int vote_flag (char *bname, char val, int mode);
/* vote.c */ extern int vote_check (int bits);
/* vote.c */ extern int showvoteitems (unsigned int pbits, int i, int flag);
/* vote.c */ extern void show_voteing_title (void);
/* vote.c */ extern int user_vote (int page, int num);
/* vote.c */ extern int voteexp (void);
/* vote.c */ extern int dele_vote (int num);
/* vote.c */ extern int vote_results (char *bname);
/* vote.c */ extern int b_vote_maintain (void);
/* vote.c */ extern int vote_title (void);
/* vote.c */ extern int ListFileEdit (char *fname, char *msg, int response);
/* vote.c */ extern int vote_key (int ch, int allnum, int pagenum);
/* vote.c */ extern int Show_Votes (void);
/* vote.c */ extern int b_vote (void);
/* vote.c */ extern int b_results (void);
/* vote.c */ extern int m_vote (void);
/* vote.c */ extern int x_vote (void);
/* vote.c */ extern int x_results (void);
/* vote.c */ extern int check_global_vote_status (char *bname);
/* vote.c */ extern void show_global_vote (void);
/* vote.c */ extern int enquire_anonymous(int ent, struct fileheader *fileinfo, char *direct, char *userid);
/* juhuireg.c */ extern void m_RegJuhui (void);
/* xyz.c */ extern int modify_user_mode (int mode);
/* xyz.c */ extern int showperminfo (unsigned int pbits, int i, int flag);
/* xyz.c */ extern unsigned int setperms (unsigned int pbits, char *prompt, int numbers, int (*showfunc) (unsigned int,int,int));
/* xyz.c */ extern int x_userdefine (void);
/* xyz.c */ extern int x_cloak (void);
/* xyz.c */ extern void x_edits (void);
/* xyz.c */ extern int gettheuserid (int x, char *title, int *id);
/* xyz.c */ extern int getthedirname (int x, char *title, char *dname);
/* xyz.c */ extern int gettheboardname (int x, char *title, int *pos, struct boardheader *fh, char *bname);
/* xyz.c */ extern void x_lockscreen (void);
/* xyz.c */ extern int heavyload (void);
/* xyz.c */ extern void exec_cmd (int umode, int pager, char *cmdfile, char *param1);
/* xyz.c */ extern void x_showuser (void);
/* xyz.c */ extern int ent_sortdir (void);
/* xyz.c */ extern int ent_bnet (void);
/* xyz.c */ extern int ent_bnet2 (void);
/* xyz.c */ extern int ent_bnet3 (void);
/* xyz.c */ extern void fill_date (void);
/* xyz.c */ extern int is_birth (struct userec user);
/* xyz.c */ extern int sendgoodwish (char *uid);
/* xyz.c */ extern int sendGoodWish (char *userid);
/* xyz.c */ extern int getdatestring (time_t now, int chang);
/* xyz.c */ extern void anywhere_lockscreen (void);



/* fileio.c */ extern void file_append (char *fpath, char *msg);
/* fileio.c */ extern int dashf (char *fname);
/* fileio.c */ extern int dashd (char *fname);
/* fileio.c */ extern int part_cp (char *src, char *dst, char *mode);
/* fileio.c */ extern int f_cp (char *src, char *dst, int mode);
/* fileio.c */ extern int valid_fname (char *str);
/* fileio.c */ extern int touchfile (char *filename);
/* fileio.c */ extern int f_rm (char *fpath);
/* html.c */ extern char *no_tag (char *source);
/* mmdecode.c */ extern void _mmdecode (unsigned char *str);
/* string.c */ extern char *substr (char *string, int from, int to);
/* string.c */ extern char *stringtoken (char *string, char tag, int *log);
/* string.c */ extern void strtolower (char *dst, char *src);
/* string.c */ extern void strtoupper (char *dst, char *src);
/* string.c */ extern int killwordsp (char *str);
/* string.c */ extern int is_alpha (int ch);
/* string.c */ extern int my_ansi_filter (char *source);
/* string.c */ extern char *ansi_filter (char *source);
/* string.c */ extern char *Cdate (time_t *clock);




#if defined (c_plusplus) || defined (__cplusplus)
}
#endif

#endif
