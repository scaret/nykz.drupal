<?php

$conf['nykz_user_role_user'] = "nykz user";

/*
 * 通过南洋客栈用户名获取uid
 * 如drupal上不存在这个用户则返回NULL
 */
function nykz_user_get_uid_by_name($username){
  $account = user_load_by_name($username);
  return $account->uid;
}

/*
 * 判断指定用户名密码是否正确
 * 如果正确，则返回用户信息
 * 如果不正确，则返回0
 */
function nykz_user_validate($username,$pw){
  $url = variable_get('nykz_config_pyserver')."/bbscheck?user=$username&pw=$pw";
  $res = file_get_contents($url);
  $arr = json_decode($res,TRUE);
  if($arr['message'] && $arr['message']['error'] && $arr['message']['no']){
    return FALSE;
  }
  elseif($arr['message'][$username]){
    return $arr['message'];
  }
  else{
    throw new Exception("pyRestful Server doesn't work!");
  }
}

/*
 * 创建一个用户在drupal上
 * 返回新用户的uid，或0，或抛出错误
 */
function nykz_user_create($username, $pw){
  $nykzuser = nykz_user_validate($username, $pw);
  if($nykzuser && !nykz_user_get_uid_by_name()){
    // 创建用户
    $rolename = variable_get('nykz_config_role_user');
    $roles = array();
    $roles[array_search('authenticated user', user_roles())] = 'authenticated user';
    $roles[array_search($rolename, user_roles())] = $rolename;
    $email = $nykzuser[$username]['email'] ? $nykzuser[$username]['email'] : $username."@nykz.net";
    $fields = array(
      'name' => $username,
      'mail' => $email,
      'pass' => $pw,
      'status' => 1,
      'init' => $email,
      'roles' => $roles,
    );
    $account = user_save('', $fields);
    return $account->uid;
  }
  else{
    return 0;
  }
}
/*
 * 查询一个用户
 */
function nykz_user_load($username){
  $url = variable_get('nykz_config_pyserver')."/bbsuser/$username";
  $res = file_get_contents($url);
  $arr = json_decode($res,TRUE);
  if($arr['message'] && $arr['message']['error'] && $arr['message']['no']){
    return FALSE;
  }
  elseif($arr['message'][$username]){
    return nykz_user_format($arr['message'][$username]);
  }
  else{
    throw new Exception("pyRestful Server doesn't work!");
  }
}

/*
 * 更换access_key和secret_key
 */
function nykz_user_change_key($username){
  $uid = (int)nykz_user_get_uid_by_name($username);
  $new_key = user_password(32);
  $new_secret = user_password(32);
  if(!$uid){
    throw new Exception("User doesn't exist.");
  }
  module_load_include('inc', 'oauth_common', 'oauth_common');
  $consumers = oauth_common_user_consumers($uid);
  $founded_flag = FALSE;
  foreach($consumers as $consumer){
    if($consumer->name = 'nykz'){
      // change the key

      $consumer->key = $new_key;
      $consumer->secret = $new_secret;
      $consumer->write();
      $founded_flag = TRUE;
      break;
    }
  }
  if(!$founded_flag){
    // add a consumer
    $consumer = new DrupalOAuthConsumer(
      $new_key,
      $new_secret,
      array(
        'callback_url' => "nykz://nykz",
        'uid' => $uid,
        'name' => 'nykz',
        'provider_consumer' => TRUE,
        'context' => 'nykz',
      )
    );
    $update = $consumer->in_database;
    $consumer->write();
  }
  return $consumer;
}

function nykz_user_format($nykzuser){
  $ret = array(
    'userid' => $nykzuser['userid'],
    'username' => $nykzuser['username'],
    'gender' => $nykzuser['gender'],
    'numlogins' => $nykzuser['numlogins'],
    'nummails' => $nykzuser['nummails'],
    'birthmonth' => $nykzuser['birthmonth'],
    'birthday' => $nykzuser['birthday'],
    'firstlogin' => $nykzuser['firstlogin'],
    'inbank' => $nykzuser['inbank'],
    'userlevel' => $nykzuser['userlevel'],
    'userperm' => array(),
    );
  global $nykz_permissions;
  $userlevel = $nykzuser['userlevel'];
  foreach($nykz_permissions as $permission){
    if($userlevel % 2){
      $ret['userperm'] += $permission;
    }
    $userlevel >>= 1;
  }

  return $ret;
}
